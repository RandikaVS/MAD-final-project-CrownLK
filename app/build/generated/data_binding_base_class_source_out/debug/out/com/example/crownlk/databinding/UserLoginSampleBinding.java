// Generated by view binder compiler. Do not edit!
package com.example.crownlk.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.crownlk.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class UserLoginSampleBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button admin;

  @NonNull
  public final EditText email;

  @NonNull
  public final Button login;

  @NonNull
  public final EditText password;

  @NonNull
  public final RelativeLayout register;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView textView3;

  private UserLoginSampleBinding(@NonNull ConstraintLayout rootView, @NonNull Button admin,
      @NonNull EditText email, @NonNull Button login, @NonNull EditText password,
      @NonNull RelativeLayout register, @NonNull TextView textView, @NonNull TextView textView3) {
    this.rootView = rootView;
    this.admin = admin;
    this.email = email;
    this.login = login;
    this.password = password;
    this.register = register;
    this.textView = textView;
    this.textView3 = textView3;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static UserLoginSampleBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static UserLoginSampleBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.user_login_sample, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static UserLoginSampleBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.admin;
      Button admin = ViewBindings.findChildViewById(rootView, id);
      if (admin == null) {
        break missingId;
      }

      id = R.id.email;
      EditText email = ViewBindings.findChildViewById(rootView, id);
      if (email == null) {
        break missingId;
      }

      id = R.id.login;
      Button login = ViewBindings.findChildViewById(rootView, id);
      if (login == null) {
        break missingId;
      }

      id = R.id.password;
      EditText password = ViewBindings.findChildViewById(rootView, id);
      if (password == null) {
        break missingId;
      }

      id = R.id.register;
      RelativeLayout register = ViewBindings.findChildViewById(rootView, id);
      if (register == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      return new UserLoginSampleBinding((ConstraintLayout) rootView, admin, email, login, password,
          register, textView, textView3);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
